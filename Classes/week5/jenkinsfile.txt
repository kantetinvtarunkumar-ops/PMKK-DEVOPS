// Jenkinfile for Demo 



pipeline {
    agent any
    stages {
        stage (" GIT CHECKOUT") {
            steps {
                echo " GIT CLONE IS FINISHED"
            }
        }// stage1
        stage (" Junit") {
            steps {
                echo " Junit IS FINISHED"
            }
        }// stage2
        stage (" Build") {
            steps {
                echo " build IS FINISHED"
            }
        }// stage3
        stage (" static analysis") {
            steps {
                echo " static analysis IS FINISHED"
            }
        }// stage4
        stage (" Docker Image") {
            steps {
                echo " Docker Image IS FINISHED"
            }
        }// stage5
        stage (" Docker scan trivyd") {
            steps {
                echo " Docker scan trivy IS FINISHED"
            }
        }// stage6
        stage (" Docker push") {
            steps {
                echo " Docker push IS FINISHED"
            }
        }// stage7
    
        stage (" Deploy") {
            steps {
                echo " Deploy IS FINISHED"            }
        }// stage8
    }//stages
}//Pipeline

































pipeline{
    agent any 
    stages{
        stage ('GIT CHECKOUT'){
            steps {
                git branch: 'main', url: 'https://github.com/vickydevo/springboot-hello.git'
            }
        }
        stage ('MAVEN BUILD'){
            steps {
              sh  'mvn clean package'
            }
        }
        stage ('DOCKER IMAGE') {
            steps {
             sh  ' docker build -t java-spring:v1 .'
            }
        }
        stage ('DOCKER PUSH') {
            steps {
                withCredentials([
                    usernamePassword(
                        credentialsId: 'docker_cred',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS')]){
              sh '''
                echo "$DOCKER_PASS"| docker login -u $DOCKER_USER --password-stdin
                docker tag java-spring:v1 $DOCKER_USER/java-spring:v1
                docker push $DOCKER_USER/java-spring:v1
                '''
                        }
            }
        }
    }
}